import{_ as t,o as e,c as o,Q as a}from"./chunks/framework.0e9d886a.js";const m=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),i={name:"index.md"},s=a('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><p><img src="https://camo.githubusercontent.com/c704e8013883cc3a04c7657e656fe30be5b188145d759a6aaff441658c5ffae0/68747470733a2f2f6e6573746a732e636f6d2f696d672f6c6f676f5f746578742e737667" alt="nest js "></p><p>Welcome to the official documentation for <strong>nest flow</strong>, a Nest.js code generator created using Yeoman. This tool is designed to simplify the process of creating Nest.js applications by automating the generation of boilerplate code.</p><h1 id="what-is-nest-flow" tabindex="-1">What is nest flow ? <a class="header-anchor" href="#what-is-nest-flow" aria-label="Permalink to &quot;What is nest flow ?&quot;">​</a></h1><p><strong>Nest Flow</strong> is a Yeoman code generator designed specifically for Nest.js, a powerful and modular framework used for building robust server-side applications using TypeScript. This tool simplifies the often intricate process of setting up and configuring a Nest.js project by automating the generation of essential boilerplate code, enabling you to swiftly establish the fundamental structure of your application.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Just want to try it out? Skip to the Quickstart.</p></div>',6),n=[s];function r(c,l,d,f,p,u){return e(),o("div",null,n)}const _=t(i,[["render",r]]);export{m as __pageData,_ as default};
